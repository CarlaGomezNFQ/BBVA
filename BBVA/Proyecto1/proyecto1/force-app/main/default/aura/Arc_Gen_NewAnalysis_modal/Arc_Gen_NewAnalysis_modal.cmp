<!--
  @Component Name     : Arc_Gen_NewAnalysis_modal.cmp
  @Description        : Modal that hosts the wizards for analysis and RAIP creation.
  @Author             : ARCE Team
  @Group              : ARCE
  @Last Modified By   : Global Desktop
  @Last Modified On   : 03-12-2021
  @Modification Log   :
  ==============================================================================
  Ver         Date                     Author      		      	   Modification
  ==============================================================================
  1.0    XX/04/2020                  ARCE TEAM     		    	Initial Version
  1.1    06/05/2020      joseluis.garcia4.contractor@bbva.com   Add "ARCE not in scope" screen to wizard.
  1.2    19/05/2020      joseluis.garcia4.contractor@bbva.com   Add resume ARCE functionality for RAIP.
  1.3    19/05/2020      joseluis.garcia4.contractor@bbva.com   Show risk segment when RAIP is out of scope.
  1.4    26/05/2020      joseluis.garcia4.contractor@bbva.com   Implement call to check for consolidated FFSS (RAIP for group).
  1.5    18/06/2020      joseluis.garcia4.contractor@bbva.com   Add isOrphan in the call to the listParticipant service.
  1.6    07/07/2020      juanignacio.hita.contractor@bbva.com   Added isHolding parameter n the AHA buildAccHasAnalysis creation method
  1.7    12/05/2021      otiliaramona.veres.contractor@bbva.com Refactored a function to use "return" consistently.
                                                                Removed the declaration of the unused 'grpid' variable.
  1.8    23/11/2021      amunguia.contractor@bbva.com           A setting has been added to control the checking of the credit lens service.
-->
<aura:component implements="force:lightningQuickActionWithoutHeader,flexipage:availableForRecordHome,force:hasSObjectName,force:hasRecordId"
                controller="Arc_Gen_NewAnalysis_Controller" access="global">
    <aura:attribute name="showCloseButton" type="Boolean" default="false" description="Whether to show a custom close button or not (must be true when this component is not used via a quick action)" />
    <aura:attribute name="firstaccountforfilldata" type="arce.Arc_Gen_Account_Wrapper" />
    <aura:attribute name="continue" type="Boolean" access="public" default="false" description="Whether this dialog is used to resume an existing analysis or not" />
    <aura:attribute name="arceTypeToContinue" type="String" access="public" default="" description="Type of the ARCE to resume (raip or analysis)." />
    <aura:attribute name="existingArceId" type="String" default="" description="Salesforce ID of the ARCE to resume" />
    <aura:attribute name="existingArceIdToModification" access="public" type="String" default="" description="Salesforce ID of the valid ARCE to modification" />


    <aura:attribute name="availableArceTypes" type="Object" />
    <aura:attribute name="selectedArceType" type="String" />
    <aura:attribute name="shouldShowGsRaip" type="Boolean" />

    <aura:attribute name="NewAnalysis" type="boolean" default="false" description="Checkbox to control the flow to execute" />
    <aura:attribute name="ModAnalysis" type="boolean" default="false" description="Checkbox to control the flow to execute" />
    <aura:attribute name="RenoAnalysis" type="boolean" default="false" description="Checkbox to control the flow to execute" />

    <aura:attribute name="loading" type="Boolean" default="true" description="Indcates that a process is running"/>
    <aura:attribute name="currentStep" type="String" default="arceTypeSelection" description="indicates the current step"/>
    <aura:attribute name="nextDisabled" type="Boolean" default="true" description="if true, the button next is disabled"/>
    <aura:attribute name="backHidden" type="Boolean" default="true" description="if true, the button back is hidden"/>
    <aura:attribute name="nextHidden" type="Boolean" default="false" description="if true, the button next is hidden"/>

    <aura:attribute name="idofarceexecutor" type="String" access="global" description=""/>
    <aura:attribute name="listparticipant" type="map" access="global" description=""/>
    <aura:attribute name="economicparticipant" type="map" access="global" description=""/>
    <aura:attribute name="typeofcustomer" type="String" access="global" description=""/>
    <aura:attribute name="isnewanalysis" type="Boolean" access="global" default="false"/>
    <aura:attribute name="showmessage" type="Boolean" access="global" default="false"/>
    <aura:attribute name="showall" type="Boolean" access="global" default="true"/>
    <aura:attribute name="sObjectName" type="String" default="{!v.hasSObjectName}" access="global" description="API Name of the current object"/>
    <aura:attribute name="analysisType" type="String" default="2" access="global" description="Type of the analysis selected"/>
    <aura:attribute name="analysisId" type="String" access="global" description="Standard Id of the new parent analysis"/>
    <aura:attribute name="groupId" type="String" default="" access="global" description="Standard Id of the group client of the analysis"/>
    <aura:attribute name="bankId" type="String" access="global" description="Id of the bank, this is obtained by ListCustomers service"/>
    <aura:attribute name="clientNumber" type="String" access="global" description="Account Number of the client"/>
    <aura:attribute name="customerNumber" type="String" access="global" description="Number of the current client of the analysis"/>
    <aura:attribute name="existentAnalysis" type="Boolean" access="global" description="Indicates if there is a previous ARCE of this group"/>
    <aura:attribute name="modalHeader" type="string" description="The text of the header in the modal"/>
    <aura:attribute name="record" type="Object" description="The record object to be displayed"/>
    <aura:attribute name="selectedSector" type="String" access="global" description="Stores selected sector"/>
    <aura:attribute name="warningListChecked" default="0" type="integer" description="Number of warningCheck list that are checked"/>
    <aura:attribute name="warningTotalList" default="5" type="integer" description="Number of total warning check"/>
    <aura:attribute name="clientOrGroup" type="string" default="" description="Contains 'Group' or 'Customer'"/>
    <aura:attribute name="status" type="String"  default="Not started" description="status of the modal process"/>
    <aura:attribute name="errorMessage" type="String" description="error message of the process"/>
    <aura:attribute name="warningMessage" type="String" description="warning message of the process"/>
    <aura:attribute name="accountInfo" type="Map" default="{}" description="Contains account info (isOrphan, orphanNumber, accounts, groupId)."/>
    <aura:attribute name="isHolding" type="Map" default="{}" description="IsHolding map indicates whether the participant is a matrix or not"/>
    <aura:attribute name="subtitleText" type="String" description="Text to show as subtitle"/>
    <aura:attribute name="spinnerText" type="String" default="Loading..." description="text to show in the spinner"/>
    <aura:attribute name="arceNotInScope" type="Boolean" default="false" description="indicates if the arce is not scope"/>
    <aura:attribute name="outOfScopeText" type="String" default="" description="reason if the arce is not in scope"/>
    <aura:attribute name="eeffCheck" type="Boolean" access="global" default="true"/>

    <aura:attribute name="showProgress" type="Boolean" default="true" description="indicates if the process is visible"/>
    <aura:attribute name="currentProgressStep" type="String" default="arceTypeSelection" description="text of the current progress step"/>
    <aura:attribute name="progressSteps" type="List" description="list of progress steps of the modal"/>

    <aura:attribute name="accHasAnalysisId" type="String" default="" description="standard id of the object arce__Account_has_Analysis__c"/>
    <aura:attribute name="newRAIPStatus" type="Boolean" default="false" description="status of the new raip"/>
    <aura:attribute name="refreshAlign" type="String" default="" description="Indicates if the align must align"/>

    <aura:handler name="init" value="{!this}" action="{!c.doInit}" description="init action"/>
    <aura:handler name="wizardEvent" event="c:Arc_Gen_WizardEvent_evt" action="{!c.handleWizardEvent}" description="Event emitted by wizards to request update the parameters"/>
    <aura:handler name="closeModalRequestEvent" event="c:Arc_Gen_WizardEvent_evt" action="{!c.closeModal}" description="Event emitted by wizards to request modal closing." />
    <aura:handler name="arceTypeChangeEvent" event="c:Arc_Gen_WizardEvent_evt" action="{!c.changeArceSelection}" description="Event emitted by wizards to request change the event"/>

    <aura:registerEvent name="wizardEvent" type="c:Arc_Gen_WizardEvent_evt" />
    <aura:registerEvent name="closeModalEvent" type="c:Arc_Gen_WizardEvent_evt" />

    <lightning:navigation aura:id="navService" />

    <aura:html tag="style">
        .cuf-content {
        padding: 0 0rem !important;
        }
        .slds-modal__container{
        width:50rem !important;
        max-width:60rem !important;
        }
        .slds-p-around--medium {
        padding: 0rem !important;
        }
        .slds-modal__content{
        height:unset !important;
        max-height:unset !important;
        }
        .economicp::after{content: '{!$Label.c.Arc_Gen_SpinnerMessage + '.'}' ; }
        .listp::after{content: '{!$Label.c.Arc_Gen_SpinnerMessage + '..'}' ; }
        .spins::after{content: '{!$Label.c.Arc_Gen_SpinnerMessage + '...'}' ; }
        .spinarce::after{content: '{!$Label.c.Arc_Gen_SpinnerMessage + '.'}' ; }
        .spinupdate::after{content: '{!$Label.c.Arc_Gen_SpinnerMessage + '.'}' ; }
        .persistance::after{content: '{!$Label.c.Arc_Gen_SpinnerMessage + '..'}' ; }
        .sector::after{content: '{!$Label.c.Arc_Gen_SpinnerMessage + '...'}' ; }
    </aura:html>
    <div class="modal-header slds-modal__header slds-size_1-of-1">
        <h4 class="title slds-text-heading--medium" >{!$Label.c.Arc_Gen_ArceWizardTitle}</h4>
        <p class="slds-text-body_small">{!v.subtitleText}</p>
        <aura:if isTrue="{!v.showCloseButton}">
            <lightning:buttonIcon iconName="utility:close" size="large" onclick="{!c.closeModalCustom}" alternativeText="close" variant="bare-inverse" class="slds-modal__close" />
        </aura:if>
    </div>
    <div class="slds-modal__content" style="overflow: initial;" aura:id="modalbody" id="modalbody">
        <aura:if isTrue="{!!v.loading}">
            <!-- Error message. -->
            <aura:if isTrue="{!v.errorMessage}">
                <div class="slds-box slds-theme_error">
                    <p>{!v.errorMessage}</p>
                </div>
                <aura:set attribute="else">
                    <!-- First step: Selection of ARCE type. -->
                    <aura:if isTrue="{!v.currentStep == 'arceTypeSelection'}">
                        <c:Arc_Gen_ArceTypeSelector_cmp availableArceTypes="{!v.availableArceTypes}" />
                    </aura:if>

                    <!-- Second step: Visualization of group structure. -->
                    <aura:if isTrue="{!v.currentStep == 'groupStructure'}">
                        <div class="slds-table slds-table_cell-buffer" aura:id="tablearea">
                            <c:Arc_Gen_groupTable_CMP currentId="{!v.recordId}" accounts="{!v.accountInfo.accounts}"/>
                        </div>
                    </aura:if>

                    <!-- Last step: Redirection to ARCE screen. -->
                    <aura:if isTrue="{!v.currentStep == 'redirectToArce'}">
                        <div class="slds-illustration slds-illustration_small slds-m-top_medium slds-m-bottom_x-large">
                            <div class="slds-text-longform">
                                <h3 class="slds-text-heading_medium">{!$Label.c.Arc_Gen_ArceContinue}</h3>
                                <aura:if isTrue="{!v.arceNotInScope}">
                                    <!-- Client not in scope. -->
                                    <p class="slds-text-body_regular slds-text-color_error">{!v.outOfScopeText}</p>
                                    <!-- Client in scope. -->
                                    <aura:set attribute="else">
                                        <p class="slds-text-body_regular">{!$Label.c.Lc_arce_NewARCE_WaitRedirect}</p>
                                    </aura:set>
                                </aura:if>
                            </div>
                        </div>
                    </aura:if>
                </aura:set>
            </aura:if>
            <!-- Warning message. -->
            <aura:if isTrue="{!v.warningMessage}">
                <div class="slds-box slds-theme_warning">
                    <p>{!v.warningMessage}</p>
                </div>
            </aura:if>
            <!-- Loading state. -->
            <aura:set attribute="else">
                <div class="slds-is-relative slds-p-vertical_x-large spinner-container">
                    <lightning:spinner alternativeText="Loading..."></lightning:spinner>
                </div>
            </aura:set>
        </aura:if>

        <div class="{!v.loading ? 'slds-hide' : ''}">
            <!-- Analysis flow. -->
            <aura:if isTrue="{!v.currentStep == 'analysis'}">
                <c:Arc_Gen_AnalysisWizard_cmp aura:id="analysis-wizard" recordId="{!v.recordId}" accountInfo="{!v.accountInfo}" isHolding="{!v.isHolding}"
                    customerId="{!v.idofarceexecutor}" existingArceId="{!v.existingArceId}" listparticipant="{!v.listparticipant}" ModAnalysis="{!v.ModAnalysis}"
                    NewAnalysis="{!v.NewAnalysis}" RenoAnalysis="{!v.RenoAnalysis}" existingArceIdToModification="{!v.existingArceIdToModification}">
                </c:Arc_Gen_AnalysisWizard_cmp>
            </aura:if>

            <!-- RAIP flow. -->
            <aura:if isTrue="{!v.currentStep == 'raip'}">
                <c:Arc_Gen_NewRAIPWizard_cmp aura:id="raip-wizard" recordId="{!v.recordId}" arceIdToResume="{!v.existingArceId}"
                    actualClient="{!v.firstaccountforfilldata}" customerId="{!v.idofarceexecutor}">
                </c:Arc_Gen_NewRAIPWizard_cmp>
            </aura:if>
        </div>
    </div>

    <!-- Last step  (Redirect to renovation)  -->
    <aura:if isTrue="{!v.currentStep == 'renovationMessage'}">
        <div class="slds-illustration slds-illustration_small slds-m-top_medium slds-m-bottom_x-large">
            <div class="slds-text-longform">
                <h3 class="slds-text-heading_medium">{!$Label.c.Arc_Gen_RenovationModalMess}</h3>
                <p class="slds-text-body_regular">{!$Label.c.Lc_arce_NewARCE_WaitRedirect}</p>
            </div>
        </div>
    </aura:if>

    <!-- Footer. -->
    <div class="slds-modal__footer slds-modal__footer_directional">
        <div class="slds-clearfix">
            <div class="slds-grid slds-gutters">
                <div class="slds-col slds-size_1-of-8">
                    <aura:if isTrue="{!!v.backHidden}">
                        <lightning:button class="slds-float_left" label="{!$Label.c.Lc_arce_back}" title="{!$Label.c.Lc_arce_back}"
                            disabled="{!v.loading}" onclick="{! c.moveBack }"/>
                    </aura:if>
                </div>
                <div class="slds-col slds-size_6-of-8 slds-align_absolute-center">
                    <aura:if isTrue="{!v.showProgress}">
                        <lightning:progressIndicator currentStep="{!v.currentProgressStep}" type="base" hasError="{!v.errorMessage}" variant="base">
                            <aura:iteration items="{!v.progressSteps}" var="step">
                                <lightning:progressStep label="{!step.label}" value="{!step.value}"/>
                            </aura:iteration>
                        </lightning:progressIndicator>
                    </aura:if>
                </div>
                <div class="slds-col slds-size_1-of-8">
                    <div class="slds-float_right">
                        <aura:if isTrue="{!!v.nextHidden}">
                            <lightning:button variant="brand" label="{!$Label.c.Arc_Gen_Next}" title="{!$Label.c.Arc_Gen_Next}"
                                disabled="{!or(v.nextDisabled,v.loading)}" onclick="{!c.moveNext}" />
                        </aura:if>
                    </div>
                </div>
            </div>
        </div>
    </div>
</aura:component>